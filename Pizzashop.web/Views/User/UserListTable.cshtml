@using System.Security.Claims;

@model Pizzashop.entity.ViewModels.AddPaginationViewmodel<Pizzashop.entity.ViewModels.UserListViewModel>;


@{
    var role=User.Claims.FirstOrDefault(c=>c.Type==ClaimTypes.Role)?.Value;
}
 <div class="table-responsive mt-4 me-2 shadow p-4" id="UserTablebody">
        <table id="userTable" class="table">
          
                 <thead>
                <tr>
                    <th>
                        UserName
                         @if (ViewBag.SortBy == "dec_name")
        {
            <i class="SortbyName bi bi-arrow-down" style="cursor: pointer;" data-sortBy="asc_name"></i>
        }
        else if (ViewBag.SortBy == "asc_name")
        {
            <i class="SortbyName bi bi-arrow-up" style="cursor: pointer;" data-sortBy="dec_name"></i>
        }
        else
        {
           
            @* <i class="SortbyName bi bi-arrow-down" data-sortBy="dec_name"></i> *@
            <i class="SortbyName bi bi-arrow-up" style="cursor: pointer;" data-sortBy="asc_name"></i>
        }
                    </th>
                    <th>
                        Email
    
                    </th>
                    <th>
                        Phone
                    </th>

                    <th>
                        Roles
                          @if (ViewBag.SortByRole == "dec_name")
        {
            <i class="SortbyRole bi bi-arrow-down" style="cursor: pointer;" data-sortbyrole="asc_name"></i>
        }
        else if (ViewBag.SortByRole == "asc_name")
        {
            <i class="SortbyRole bi bi-arrow-up" style="cursor: pointer;" data-sortbyrole="dec_name"></i>
        }
        else
        {
            <i class="SortbyRole bi bi-arrow-down m-0" style="cursor: pointer;" data-sortbyrole="dec_name"></i>
            <i class="SortbyRole bi bi-arrow-up m-0" style="cursor: pointer;" data-sortbyrole="asc_name"></i>
        }
                    </th>
                    <th>
                        Status
                    </th>

                   @if((bool)Context.Items["CanAddEdit"] == true || (bool)Context.Items["CanDelete"] == true ){

                <th>Action</th>
                }
                </tr>
            </thead>
            <tbody>
                
@if (Model.Items != null && Model.Items.Any())
        {
@foreach (var item in Model.Items)
{
                    <tr>
                        <td>
                           
                            <img src="@item.Image" alt="" height="50px" width="50px" class="rounded rounded-circle" style="object-fit: cover;">
                            @item.UserName
                        </td>

                        <td>
                            @item.Email
                        </td>
                        <td>
                           @item.Phone
                        </td>
                        <td>
                            @item.RoleName
                        </td>
                     
                        <td>
                            @if (@item.Status==true)
                            {
                                 <button class="bg-success text-white border-0" style="border-radius: 200px;"><small>Active</small></button>
                                @* <span class="badge bg-success">Active</span> *@
                            }
                            else
                            {
                                <button class="bg-danger text-white border-0" style="border-radius: 200px;"><small>Inactive</small></button>
                                @* <span class="badge bg-danger">Inactive</span> *@
                            }
                       

                          @if (item.Email != Model.Email &&   role == "Manager")
                         {   
                            if(@item.RoleName!="Admin")  {
                        <td class="gap-3">
                             @if((bool)Context.Items["CanAddEdit"] == true ){
                            <a  class="text-black cursor-pointer editUser"  asp-action="EditUser" asp-controller="User" asp-route-id="@item.UserId"   ><i class="bi bi-pen"></i></a> }
                            @if((bool)Context.Items["CanDelete"] == true ){ <button class="border-0 DeleteUserbutton" data-id="@item.UserId" data-user-name="@item.UserName"  data-bs-toggle="modal" data-bs-target="#deleteUserModal">
                            <i class="bi bi-trash"></i>
                            </button>  }    
                        </td> 
                        }
                       
                        } else if(item.Email != Model.Email){
                        <td class="gap-3">
                             @if((bool)Context.Items["CanAddEdit"] == true ){
                            <a  class="text-black cursor-pointer editUser"  asp-action="EditUser" asp-controller="User" asp-route-id="@item.UserId"   ><i class="bi bi-pen"></i></a> }
                             @if((bool)Context.Items["CanDelete"] == true ){<button class="border-0 DeleteUserbutton" data-id="@item.UserId" data-user-name="@item.UserName"  data-bs-toggle="modal" data-bs-target="#deleteUserModal">
                            <i class="bi bi-trash"></i>
                            </button>    }  
                        </td> 
                        }

                        
                   
        </tr>
    } }
        else
        {
            <tr>
                <td colspan="12" class="text-center">No records found.</td>
            </tr>
        }

    </tbody>
    </table>
@if (Model.Items != null && Model.Items.Any())
   {        <div>
<div class="border-0" colspan="10">
                            <div class="d-flex align-content-center align-items-center justify-content-end">
                            <span>Items Per page: </span>
                            <div class="d-flex justify-content-end align-items-center">
                                <div>
                                <select class="form-select ms-2 page-list" id="usertableSizeSelect" asp-for="PageSize" onchange="paginationUser()">
                                    <option value="2" selected="@((Model.PageSize == 2) ? "selected" : null)">2</option>
                                    <option value="5" selected="@((Model.PageSize == 5) ? "selected" : null)">5</option>
                                    <option value="10" selected="@((Model.PageSize == 10) ? "selected" : null)">10</option>
                                    <option value="15" selected="@((Model.PageSize == 15) ? "selected" : null)">15</option>
                                </select>
                                </div>

                                <div class="ms-3">
                                    <span>
                                        Showing 
                                        <span id="startUser">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> -
                                        <span id="endUser">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)</span> of
                                        <span id="totalUser">@Model.TotalCount</span>   
                                    </span>
                                </div>
                                <div class="m-2">
                                <button class="page-link btn bg-primary" id="prev"  onclick="pageChangeUser('prev')" @(Model.CurrentPage
                                                    == 1 ? "disabled" : "") aria-label="Previous" id="previous_page">
                                <i class="bi bi-chevron-left text-white" aria-hidden="true"></i>
                                </button>
                                </div>
                                <div class="m-2">
                                    <button class="page-link btn bg-primary " id="next" onclick="pageChangeUser('next')" @((Model.CurrentPage
                                                    *Model.PageSize >= Model.TotalCount) ? "disabled" : "") aria-label="Next" id="next_page">
                                        <i class="bi bi-chevron-right text-white"></i>
                                    </button>
                                </div>
                            </div>
                            </div>
                        </div>
                    </div>

    }
</div>

    </div>


  
   
    <div class="modal fade" id="deleteUserModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <form id="DeleteUserForm" method="post" asp-controller="User" asp-action="DeleteUser">
                 <input type="hidden" id="userInput" name="id">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="deleteModalLabel">Delete Information</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body justify-content-center align-items-center d-flex flex-column">
                    <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="Warning" height="40" width="40">
                  
                    <p>Are you sure you want to delete this user? <strong id="DeleteUserName"></strong></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                    <button type="submit" class="btn btn-danger">Yes</button>
                </div>
            </div>
            </form>
        </div>
    </div>


    <script>
  

      $('.DeleteUserbutton').click(function () {
        var userId = $(this).data("id");
        console.log(userId)
        $("#userInput").val(userId);
        var UserName = $(this).data('user-name');
        document.getElementById('DeleteUserName').innerText = `${UserName}`
        $('#DeleteUserForm').submit(function (e) {
            DeleteUser(userId);
        });
    });


    function DeleteUser(UserId) {
        $.ajax({
            url: '/User/DeleteUser',
            type: 'POST',
            data: { id: UserId },
            success: function (response) {
                if (response) {
                    $('#deleteUserModal').modal('hide');
                } else {
                    alert('Item not found.');
                }
            }
        });
    }

$(".SortbyName").on('click',  function () {
    var SortbyName = $(this).data('sortby');
    UserSection(currentPageUser, UserpageSize, Usersearch, SortbyName,SortbyRole)
   
});
$(".SortbyRole").on('click', function () {
    var SortbyRole = $(this).data('sortbyrole'); 
    UserSection(currentPageUser, UserpageSize, Usersearch, SortbyName,SortbyRole)
   
});
       function paginationUser() {
            var value = parseInt($("#usertableSizeSelect").val());
            UserpageSize = value;
            let totalPagesOrder = Math.ceil(@Model.TotalCount / UserpageSize);
            if (currentPageUser > totalPagesOrder) {
                currentPageUser = totalPagesOrder > 0 ? totalPagesOrder : 1;
            }
            UserSection( currentPageUser, UserpageSize, Usersearch,SortbyName,SortbyRole)
        }

    function pageChangeUser(pageAction) {

        if (pageAction == 'prev') {
            currentPageUser = currentPageUser === 1 ? 1 : --currentPageUser;
        }
        else {
            currentPageUser = (currentPageUser * UserpageSize) > @Model.TotalCount ? currentPageUser : ++currentPageUser;
        }
        UserSection( currentPageUser, UserpageSize, Usersearch,SortbyName,SortbyRole)
    }
    </script>