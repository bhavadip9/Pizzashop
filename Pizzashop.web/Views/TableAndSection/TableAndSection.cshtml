@model Pizzashop.entity.ViewModels.SectionListViewModel


<style>
    .parent.active {
        color: #0077cc;
        font-weight: 600;
        margin: 0px;
        padding: 0px;
        gap: 5px;
    }
</style>
<div>
    <h1 class=" fw-bold" style="color: #0077cc;">Sections/Table</h1>
    <div class="row mt-5">

        <div class=" bg-white p-3 shadow" id="SectionTableLeftPart">
            <div>
                <div class="d-flex flex-row gap-5 align-items-center pt-3">
                    <span class="m-auto  fs-5 fw-bold" style="font-size: larger; color: #0077cc;">Section</span>
                    @if ((bool)Context.Items["CanAddEdit"] == true)
                    {
                        <button type="button" class="border-0 bg-light" id="AddSectionButton">
                            <h3 style="color: #0077cc;"><i class="bi bi-plus-square"></i></h3>
                        </button>
                    }
                </div>

                <ul class="list-group list-unstyled mt-3  setsectionheight  d-none d-md-block" style="">
                    @foreach (var item in Model.Section)
                    {

                        <li class="mb-2 parent d-flex gap-2 list-group-item-action pb-2 pt-2 section-item "
                            data-id="@item.SectionId">
                            <i class="bi bi-grid-3x2-gap-fill" style="transform: rotate(90deg);"></i>
                            <p class=" mt-auto mb-auto">@item.SectionName</p>
                            <div class="gap-1 d-flex notvisible">
                                @if ((bool)Context.Items["CanAddEdit"] == true)
                                {
                                    <button class="btn EditSectionbutton" style="color: #0d6efd;" data-id="@item.SectionId">
                                        <i class="bi bi-pen  "></i></button>
                                }
                                @if ((bool)Context.Items["CanDelete"] == true)
                                {
                                    <button class="btn DeleteSectionbutton" data-section-name="@item.SectionName"
                                        style="color: #0d6efd;" data-bs-target="#DeleteSection" data-bs-toggle="modal"
                                        data-id="@item.SectionId">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            </div>
                        </li>
                    }
                </ul>



                <div class="d-flex flex-direction-row d-md-none mt-3 mb-3 gap-2">


                    <select class="form-select" id="sectionSelector">
                        @for (int i = 0; i < Model.Section.Count; i++)
                        {
                            var item = Model.Section[i];
                            <option class="category-item-change " value="@item.SectionId" data-name="@item.SectionName"
                                data-id="@item.SectionId" data-description="@item.SectionDescription" selected="@(i == 0)">
                                @item.SectionName
                            </option>
                        }
                    </select>

                    <!-- Action Buttons -->
                    <div class=" d-flex gap-2" id="mobileButtons" style="display: none;">
                        @if ((bool)Context.Items["CanAddEdit"] == true)
                        {
                            <button class="btn btn-outline-primary EditSectionbuttonmobile" id="mobileEditBtn">
                                <i class="bi bi-pen"></i>
                            </button>
                        }
                        @if ((bool)Context.Items["CanDelete"] == true)
                        {
                            <button class="btn btn-outline-danger DeleteSectionbuttonMobile" data-bs-target="#DeleteSection"
                                data-bs-toggle="modal" id="mobileDeleteBtn">
                                <i class="bi bi-trash"></i>
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class=" bg-white p-3 shadow" id="SectionTableRightPart">
            @* <div class="d-flex flex-row justify-content-between  mb-3"> *@
            <div class="itemHader">
                <div>
                    <p class=" fw-bold" style="color: #0077cc;">Tables</p>
                </div>

                <div class="d-flex flex-row gap-3 mt-3">


                    <div class="input-group search-space-table">
                        <input type="search" name="search " id="searchTable" placeholder="Search"
                            class="form-control border-end-0">
                        <span class="input-group-text bg-white border-start-0 ">
                            <i class="bi bi-search" id="searchOrder"></i>
                        </span>
                    </div>

                    <div class="d-flex gap-2 justify-content-end">
                        @if ((bool)Context.Items["CanDelete"] == true)
                        {
                            <button class="btn " style="border: 1px solid rgb(43, 41, 41);" id="deleteSelectedmanytable">
                                <i class="bi bi-trash"></i>
                            </button>
                        }
                        @if ((bool)Context.Items["CanAddEdit"] == true)
                        {

                            <button class="btn btn-primary " id="AddTableButton"><i class="bi bi-plus"></i><span
                                    class="Additemtext">Add Table</span>
                            </button>
                        }
                    </div>
                </div>
            </div>


            <div class="table-responsive" id="tableContainer">

            </div>

        </div>
    </div>
</div>


<div id="AddSectionDiv"></div>
<div id="AddTableDiv"></div>
<div id="showdeletemodal"></div>
<div id="EditSectionDiv"></div>

<partial name="_DeleteSectionPV" model="new Pizzashop.entity.ViewModels.AddSectionViewModel()" />



<script>



    $(document).ready(function () {
        $('#sectionSelector').on('change', function () {
            var selectedOption = $(this).find('option:selected');
            var categoryId = selectedOption.data('id');
            currentSectionId = categoryId;

            SectionTable(currentSectionId, currentPage, pageSize, search)

            console.log("Add Category with ID:", categoryId);
        });
    });

    $(function () {
        $('.parent').first().addClass('active');
    });
    $(function () {
        $('.parent').on('click', function () {
            $('.parent').removeClass('active');
            $(this).addClass('active');
        });
    });

    $("#deleteSelectedmanytable").click(function () {
        console.log("Call me")
        let selectedTable = [];

        $(".delete-checkbox-table:checked").each(function () {
            let id = parseInt($(this).val());
            console.log("id " + id);
            if (!isNaN(id)) {
                selectedTable.push(id);
            }
        });
        var IDs = { "Ids": selectedTable };
        console.log(selectedTable);
        if (selectedTable.length === 0) {
            toastr.error("Please select at least one table to delete.")
            return;
        }

        if (selectedTable.length >= 0) {
            $.ajax({
                url: "/TableAndSection/DeleteManyTable",
                type: "GET",
                data: IDs,
                success: function (response) {
                    if (response) {
                        $("#showdeletemodal").html(response);
                        $('#DeleteManyTable').modal('show');
                        DeleteMany(IDs)
                    } else {
                        toastr.error("Error: " + response.message);
                    }
                }

            });
        }


    });


    function DeleteMany(IDs) {
        $.ajax({
            url: "/TableAndSection/DeleteManyTablepost",
            type: "POST",
            data: IDs,
            success: function (response) {
                if (response) {
                    ('#DeleteManyTable').modal('hide');
                } else {
                    console.log("Error: " + response.message);
                }
            }
        });
    }



    //Add Section
    $(document).on('click', "#AddSectionButton", function () {
        $.ajax({
            url: '/TableAndSection/AddSection',
            type: 'GET',
            success: function (response) {
                $("#AddSectionDiv").html(response);
                $("#AddSection").modal('show');
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
            }
        })
    })



    $(document).on('click', '#SectionSave', function (e) {
        e.preventDefault();
        var formData = new FormData($('#AddSectionForm')[0]);
        console.log(formData);

        $.ajax({
            url: '/TableAndSection/AddSection',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                
                console.log(response)
                if (response.success == true) {
                   
                    toastr.success(response.message)
                     //SectionTable(response.sectionId, currentPage, pageSize, search)
                    $('#AddSection').modal('hide');

                   
                location.reload();
                } else {
                    toastr.error(response.message)
                }

            },
            error: function (xhr, status, error) {
                toastr.error("Access Denined");
            }
        });
    });

    //Edit Section
    $(document).on('click', '.EditSectionbutton', function () {


        var SectionId = $(this).data("id");
        $.ajax({
            url: '/TableAndSection/UpdateSection',
            type: 'GET',
            data: { sectionId: SectionId },
            success: function (response) {
                console.log(response)
                $("#EditSectionDiv").html(response);
                $("#UpdateSection").modal('show');
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
            }
        })
    });


    $(document).on('click', '.EditSectionbuttonmobile', function () {

        var selected = $('#sectionSelector option:selected');
        var SectionId = selected.val();
        $.ajax({
            url: '/TableAndSection/UpdateSection',
            type: 'GET',
            data: { sectionId: SectionId },
            success: function (response) {
                console.log(response)
                $("#EditSectionDiv").html(response);
                $("#UpdateSection").modal('show');
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
            }
        })
    });


    $(document).on('submit', '#editSectionForm', function (e) {
        e.preventDefault();


        var formData = new FormData($('#editSectionForm')[0]);
        console.log(formData);

        $.ajax({
            url: '/TableAndSection/UpdateSection',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                $('#UpdateSection').modal('hide');
                location.reload();
            },
            error: function (xhr, status, error) {
                console.error('Error occurred:', error);
            }
        });
    });

    //Add Table
    $(document).on('click', "#AddTableButton", function () {

        $.ajax({
            url: '/TableAndSection/AddTable',
            type: 'GET',
            success: function (response) {
                $("#AddTableDiv").html(response);
                GetAllSectionAdd();
                $("#AddTable").modal('show');
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
            }
        })
    })


    $(document).on('submit', '#AddTableForm', function (e) {
        debugger
        e.preventDefault();

        var currentTableId = $("#SectionSelectAdd").val();
        if(currentTableId == -1){
            toastr.error("Please select a section")
            return;
        }
        var formData = new FormData($('#AddTableForm')[0]);
        console.log(formData);
        @* (formData.sectionId)  *@


        $.ajax({
            url: '/TableAndSection/AddTable',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success == true) {
                    $('#AddTable').modal('hide');
                    toastr.success(response.message)
                }
                else {
                    toastr.error(response.message)
                    $('#AddTable').modal('hide');
                }
                SectionTable(currentTableId, currentPage, pageSize, search)
                // location.reload();
            },
            error: function (xhr, status, error) {
                console.error('Error occurred:', error);
            }
        });
    });






    var currentPage = 1;
    var pageSize = 5;
    var search = "";
    var currentTableId = null;

    function SectionTable(sectionId, page, pageSize, search) {

        $.ajax({
            url: "/TableAndSection/GetTableBySection",
            type: "GET",
            data: {
                sectionId: sectionId,
                page: page,
                pageSize: pageSize,
                search: search,
            },
            success: function (data) {
                $("#tableContainer").html(data);
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                $('#tableContainer').html("<p>Error loading items.</p>");
            }
        });
    }

    $(document).ready(function () {

        $('.section-item').on("click", function () {
            console.log("Add Section");
            var tableId = $(this).data("id");
            currentTableId = $(this).data("id");
            console.log(tableId);
            SectionTable(tableId, currentPage, pageSize, search);
        });
        const firstCategoryLink = document.querySelector('.section-item');
        if (firstCategoryLink) {

            const firstCategoryId = firstCategoryLink.getAttribute('data-id');
            currentTableId = firstCategoryId;
            SectionTable(firstCategoryId, currentPage, pageSize, search);
        }
    });

    $('#searchTable').on('input', function () {
        search = $("#searchTable").val();
        console.log(search);
        SectionTable(currentTableId, currentPage, pageSize, search)

    });


    $(".DeleteSectionbuttonMobile").click(function () {
        
        var selected = $('#sectionSelector option:selected');
        var SectionId = selected.val();
        $("#DeleteSectionId").val(SectionId);
        @* var SectionName = $(this).data('section-name');
        document.getElementById('DeleteSectionName').innerText = `${SectionName}` *@
        $('#DeleteSectionForm').submit(function (e) {
            Deletesection(SectionId);
        });
    });





    $('.DeleteSectionbutton').click(function () {
        var itemId = $(this).data("id");
        $("#DeleteSectionId").val(itemId);
        var SectionName = $(this).data('section-name');
        document.getElementById('DeleteSectionName').innerText = `${SectionName}`
        $('#DeleteSectionForm').submit(function (e) {
            Deletesection(itemId);
        });
    });


    function Deletesection(TableId) {
        $.ajax({
            url: '/TableAndSection/DeleteSectionPV',
            type: 'POST',
            data: { id: TableId },
            success: function (response) {
                if (response) {
                    $('#DeleteSection').modal('hide');
                } else {
                    alert('Item not found.');
                }
            }
        });
    }






    @* $('#AddTableForm').submit(function () {
        $('#AddTable').modal('hide');
        location.reload();

    }) *@



        function GetAllSectionAdd() {
            $.ajax({

                url: '/TableAndSection/GetAllSection',
                type: 'GET',
                success: function (data) {
                    console.log("Response Data:", data);
                    var options = '<option value="-1">Section</option>';
                    $.each(data, function (index, section) {

                        options += '<option value="' + section.sectionId + '">' + section.sectionName + '</option>';
                    });
                    $("#SectionSelectAdd").html(options);
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", status, error);
                    $("#SectionSelectAdd").html('<option value="-1">Failed to load categories</option>');
                }
            });
        }














</script>